---

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"

- import_tasks: keepalived_install.yml

- name: Allow consuming apps to bind on non local addresses
  sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_set: yes
    state: present
  when: keepalived_bind_on_non_local | bool
  with_items:
    - "net.ipv4.ip_nonlocal_bind"
    - "net.ipv6.ip_nonlocal_bind"

- name: Configure keepalived
  template:
    src: keepalived.conf.j2
    dest: "{{ keepalived_config_file_path }}"

- name: restart keepalived
  service:
    name: "{{ keepalived_service_name }}"
    state: restarted

- name: Check that daemon options file exists
  stat:
    path: "{{ keepalived_daemon_options_file_path }}"
  register: keepalived_daemon_options_file

- name: Configure keepalived extra params
  lineinfile:
    line: "{{ item }}"
    regexp: "^{{ item.split('=')[0] }}"
    dest: "{{ keepalived_daemon_options_file_path }}"
    state: present
  with_items: "{{ keepalived_daemon_default_options_overrides }}"
  when: keepalived_daemon_options_file.stat.exists

- name: Dropping the tracking scripts
  copy:
    src: "{{ item.value.src_check_script }}"
    dest: "{{ item.value.dest_check_script|default(item.value.check_script) }}"
    mode: "0755"
  with_dict: "{{ keepalived_scripts | default('{}') }}"
  when: item.value.src_check_script is defined

- name: Dropping the general notification scripts
  copy:
    src: "{{ item.value.src_notify_script }}"
    dest: "{{ item.value.notify_script }}"
    mode: "0755"
  with_dict: "{{ keepalived_sync_groups }}"
  when: item.value.src_notify_script is defined


- name: Dropping the notification scripts for switching to master
  copy:
    src: "{{ item.value.src_notify_master }}"
    dest: "{{ item.value.notify_master }}"
    mode: "0755"
  with_dict: "{{ keepalived_sync_groups }}"
  when: item.value.src_notify_master is defined

- name: Dropping the notification scripts for switching to backup
  copy:
    src: "{{ item.value.src_notify_backup }}"
    dest: "{{ item.value.notify_backup }}"
    mode: "0755"
  with_dict: "{{ keepalived_sync_groups }}"
  when: item.value.src_notify_backup is defined

- name: Dropping the notification scripts for failures
  copy:
    src: "{{ item.value.src_notify_fault }}"
    dest: "{{ item.value.notify_fault }}"
    mode: "0755"
  with_dict: "{{ keepalived_sync_groups }}"
  when: item.value.src_notify_fault is defined

- name: Dropping the general notification scripts (instances)
  copy:
    src: "{{ item.value.src_notify_script }}"
    dest: "{{ item.value.notify_script }}"
    mode: "0755"
  with_dict: "{{ keepalived_instances }}"
  when: item.value.src_notify_script is defined

- name: restart keepalived
  service:
    name: "{{ keepalived_service_name }}"
    state: restarted