---

- name: Installing packages to allow package manager to be used over HTTPS
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    force_apt_get: yes
  loop:
    - aptitude
    - python-apt
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common
    - ntp

- name: Adding signing key for Docker package installation authentication
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Adding apt repository of Docker for stable branch of Bionic Beaver
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Installing docker and its dependecies
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - docker-ce={{ docker-ce_ubuntu_version }}
    # - docker-ce
    # - docker-ce=18.06.2~ce~3-0~ubuntu
    - docker-ce-cli
    - containerd.io

- name: Add vagrant user to Docker group to enable to use without root privileges
  user:
    name: vagrant
    group: docker

# - name: docker status
#   service:
#     name: docker
#     state: started

# - name: creating a directory
#   file:
#     path: /etc/systemd/system/docker.service.d
#     state: directory

# - name: Changing storage driver and driver for docker
#   template:
#     src : main.json.j2
#     dest: /etc/docker/daemon.json

- name: Changing storage driver and driver for docker
  blockinfile:
    create: yes
    path: /etc/docker/daemon.json
    block: |
     {
       "exec-opts": ["native.cgroupdriver=systemd"],
       "log-driver": "json-file",
       "log-opts": {
         "max-size": "100m"
       },
       "storage-driver": "overlay2"
     }

- name: Reloading daemon
  command: systemctl daemon-reload

- name: docker status
  service:
    name: docker
    state: started

- name: Adding overlay module
  modprobe:
    name: overlay
    state: present

- name: Adding br_netfilter module
  modprobe:
    name: br_netfilter
    state: present

- name: Inserting block after creation of a file.
  blockinfile:
    create: yes
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    block: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1

- name: Reloading system.conf
  shell: sysctl -p --system

- name: Adding Project Atom Repository
  apt_repository:
    repo: ppa:projectatomic/ppa
    state: present

- name: Installing Container
  apt:
    name: cri-o-1.15
    state: present
    update_cache: yes

- name: Adding signing key for Kubernetes package installation authentication
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes for main brach of Bionic Beaver
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Installation of Kubernetes binaries
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet{{ ubunutu_k8s_version }}
      - kubeadm{{ ubunutu_k8s_version }}
      - kubectl{{ ubunutu_k8s_version }}

- name: Configure to use systemd driver instead of default cgroup driver
  lineinfile:
    path: /lib/systemd/system/docker.service
    regexp: "^ExecStart=/usr/bin/dockerd -H fd://"
    line: ExecStart=/usr/bin/dockerd --exec-opt native.cgroupdriver=systemd

- name: Install additional system packages
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - jq

- name: Restarting kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted

- name: Pulling images required for setting up a Kubernetes cluster
  shell: kubeadm config images pull
